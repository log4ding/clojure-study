name: PR 리뷰 상태 관리

on:
  pull_request_review:
    types: [submitted]
  pull_request_review_comment:
    types: [created]

env:
  REQUIRED_APPROVALS: 1

jobs:
  manage-review-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: 리뷰 완료 개수 체크
        id: approval-check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const prCreator = context.payload.pull_request.user.login;
            const approvals = reviews.filter(r => r.state === 'APPROVED');
            const nonApprovals = reviews.filter(r =>
              r.state === 'CHANGES_REQUESTED' ||
              (r.state === 'COMMENTED' && r.user.login !== prCreator && r.body && r.body.trim() !== '')
            );
            const approvalCount = new Set(approvals.map(r => r.user.login)).size;
            const nonApprovalCount = new Set(nonApprovals.map(r => r.user.login)).size;
            const requiredApprovals = parseInt(process.env.REQUIRED_APPROVALS) || 3;
            const isReviewComplete = approvalCount >= requiredApprovals && nonApprovalCount === 0;
            return { isReviewComplete };
      - name: 리뷰완료 레이블 추가
        if: steps.approval-check.outputs.result && fromJSON(steps.approval-check.outputs.result).isReviewComplete
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: 리뷰완료

      - name: 리뷰완료 레이블 삭제
        if: steps.approval-check.outputs.result && !fromJSON(steps.approval-check.outputs.result).isReviewComplete
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: 리뷰완료
